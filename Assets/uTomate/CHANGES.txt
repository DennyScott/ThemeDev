uTomate Changelog
=================

Change log
----------

Version 1.7.0
~~~~~~~~~~~~~

* New Feature: You can now set the player settings for Windows Store applications using the new "Set Player Settings Windows Store" action.
			   Note, that this action is only available for Unity 5.3 and later versions.
* New Feature: You can now batch-assign asset bundle names and variants to assets using the new "Set asset bundle" action.
* New Feature: You can now create an empty game object in the scene using the new "Create Empty Game Object" action.
* New Feature: You can now modify the scene hierarchy of game objects by using the new "Set Parent of Game Object" action.
* New Feature: You can now upload a file to an FTP server using the new "Upload to FTP server" action.
* Improvement: uTomate now works properly with Unity 5.4.
* Improvement: All actions that set player settings have been upgraded to support the latest features coming with Unity 5.4.
* Improvement: The "Copy Files" action now has a flag which allows you to move files instead of copying them.


Version 1.6.4
~~~~~~~~~~~~~

* Improvement: It is now possible to invoke uTomate across the Unity 4.x <-> 5.x boundary using the "Run uTomate in external project" 
               action. This was previously not possible because the LE version of uTomate doesn't use namespaces while the non-LE
               version does.
* Fix: When you have a larger plan and the node editor is scrolled down while you create a new node, the new node will now be 
       placed at the position where you clicked. Thanks go to Henry Stratton who spotted the misbehaviour and provided a fix
       for this.   
* Fix: A compiler error and several warnings when using uTomate in Unity 5.1.0 were removed.


Version 1.6.3
~~~~~~~~~~~~~

* New Feature: You can now add a description to your automation plans in the inspector window. This makes it easier to 
               look up what an automation plan actually does without having to open it in the automation plan editor.
			         Thanks to Jean Fabre for suggesting this!
* Improvement: uTomate now works properly with Unity 5.3.
* Fix: The "Build Player" action will now always ensure that the containing folder for the built player exists.
* Fix: If you forget to add an automation plan to the "Run Automation Plan After Assembly Reload" action uTomate will
       no longer enter an endless loop and freeze Unity.
* Breaking Change: The action for running unit tests is no longer included in the uTomate core distribution as it strongly
                   depends on the version of the Unity test tools being used and there were quite a few breaking changes
                   on that front with Unity 5.3. We're currently rewriting this action and will make it available as a 
                   download from our website when it's done.


Version 1.6.2
~~~~~~~~~~~~~

* New Feature: Added integration with Unity test tools. You can now run your unit tests from within a uTomate automation
               plan. This integration requires the Unity test tools in your project. To enable the integration,
               go to the "uTomate-Extensions" folder and double-click the "uTomate-UnityTestTools-extension" package.
* Improvement: The "Set Player Settings iOS", "Set Player Settings PC/Mac/Linux", "Set Player Settings Android" and
               "Set Player Settings Web" actions have been updated to reflect the full set of settings available in 
               Unity 5.0, 5.1 and 5.2.
* Fix: The "Set Player Settings Android" action will now properly set the "Splash Screen" property in Unity 5.2.
* Fix: The "Set Static Flags of Game Object" action will now work properly with mixed static flags.


Version 1.6.1
~~~~~~~~~~~~~

* New Feature: This build ensures compatibility with Unity 5.2.
* Improvement: The "Set Player Settings iOS" action has been updated to reflect the current set of available iOS player settings.
* Improvement: The "Build Dll" action has a new property to generate debug information for a dll.
* Improvement: The "Build Dll" action now allows resource-only dll's.
* Fix: The "Copy Files" action no longer chokes on relative source paths.


Version 1.6.0
~~~~~~~~~~~~~

* New Feature: "Upload to TestFairy" action, which allows you to upload builds to the TestFairy service. You will need a TestFairy 
               account and API key for this.
* New Feature: "Upload to HockeyApp" action, which allows you to upload builds to the HockeyApp service. You will need a HockeyApp 
               account and API token for this.
* New Feature: "Build Visual Studio Project" action, to build a Visual Studio project (SLN or CSPROJ) using MSBuild. This requires 
               Visual Studio 2013 and works on Windows, only. 
* New Feature: "Build XCode Project" action, to build an XCode project (e.g. for building an IPA file from Unity's exported sources). 
               This requires XCode and works on Mac OS X, only.
* New Feature: "Write Text File" action which allows to easily write arbitrary text into a file. This can be used for
               creating reports, shell/code scripts or configuration files.
* New Feature: "Run Plan After Assembly Reload" action. This action is designed to work around the dreaded assembly reload
               that happens when you build a player or modify/import code files while an automation plan is running. This assembly
               reload is triggered by Unity and will kill all running scripts (including uTomate). Using this new action you
               can instruct uTomate to start a new automation plan after the assembly reload is finished. Note that this action
               is somewhat experimental, so please let us know whether or not it works for you.
* New Feature: "Set Graphics API" action which allows you to set the desired graphics API for a build target. This will only work
               in Unity 5.1.1 or later.
* Breaking Change: Graphics API specific settings in the "Set Player Settings <Platform>" actions (like "use DirectX11", 
				   "Target GLES Graphics") have been moved over to the new "Set Graphics API" action starting with Unity 5.1.1. 
				   It is not possible to automatically migrate this change, so please add a new "Set Graphics API" action to
				   your automation plan if you want to make sure that the correct graphics API is used on the target platform.
                   This affects Unity versions 5.1.1 or later.              
* Improvement: The action for setting iOS player settings can now set the desired scripting backend (IL2CPP or Mono).
* Improvement: The context now contains two variable $os:newLine and $os:newLineType which hold the line ending/line ending type
               used on the current operating system. This is useful in conjunction with the new "Write Text File" action, as 
               it allows you to produce text files that have the correct line ending for the current operating system.
* Improvement: You can now set WSA build options from the "Build Player" action.
* Improvement: Added a new function to the UTFileScriptExtension which allows you to get the directory name of a path in an action
               with: $ut:file.DirectoryName($path). This complements the existing functions which get file names and extensions.
* Improvement: Editor and project property names now have a tooltip, so you can see long names even if they are cut off because there
               is not enough space to display them.               
* Fix: The "Add Component" and "Set Component Property" actions will no longer throw an exception if you have a component with the
       same name in different namespaces.
* Fix: The "Delete Files & Folders" action no longer throws an exception if the folder to be deleted does not exist.
* Fix: The Build Nav Mesh action will no longer throw an exception when runnning.
* Fix: Fixed a few exceptions coming up when instanciating certain actions.                   


Version 1.5.0
~~~~~~~~~~~~~

This version is compatible with Unity 5 and later. Support for older Unity versions has been dropped. For older versions
of Unity we provide 1.5.0 LE (Legacy Edition). You will automatically get the legacy edition if you download uTomate
with Unity versions older than 5.0 from the Unity asset store. 

Version 1.5.0 contains a few breaking changes so please read these release notes carefully before migrating your project 
to this new version.

* New Feature: "Find Assets" action which can be used to find an asset by it's path name. You can then check properties
  on the found asset.
* Improvement: "Select Asset" action now accepts wildcards.  
* Improvement: It is no longer required to write a CustomEditor implementation for custom actions, unless you have 
  specific editor rendering needs. By default all new actions will be rendered with uTomate's built-in inspector 
  renderer.
* Improvement: It is no longer necessary to have to uTomate main window open to run an automation plan. This is 
  especially useful for continuous integration builds.
* Breaking Change: The "Build Asset Bundles" action and their related actions "Push Asset Dependencies" and 
  "Pop Asset Dependencies" are no longer available in Unity 5. As a replacement there is a new action 
  "Build Asset Bundles From Asset Database" which will build the asset bundles that have been defined in the Unity 
  editor. If you were using the old actions, please migrate to the new asset bundle system in Unity 5 and then
  use the new action for building your asset bundles.
* Breaking Change: Actions which use file sets will no longer select ALL files if you leave the 'Includes' field empty. 
  This has been proven counter-intuitive in the past and may also adversely impact performance. Also it is rather rare 
  that you really want to select ALL files in a whole subtree. If you really need to select all files, please put "**"
  into the "Includes" field of the action.   
* Breaking Change: Namespaces. Since we dropped support for Unity 3.5 we can finally use namespaces. All uTomate scripts
  now reside in the AncientLightStudios.uTomate namespace and sub-namespaces. This will greatly reduce the chance of 
  creating naming conflicts with your projects. If you have written custom uTomate actions, you need to adapt them 
  accordingly. If your automation plans and actions are not recognized after upgrading to uTomate 1.5.0, please 
  right-click  them (or their containing folder) and select "Reimport". This should fix it.

  NOTICE: For CI users: The batch runner also has changed it's namespace so please update your scripts to:
  -executeMethod AncientLightStudios.uTomate.UTExternalRunner.RunPlan  instead of
  -executeMethod UTExternalRunner.RunPlan 

* Improvement: The Build DLL action now supports large amounts of source files and embedding resources.
* Improvement: The inspectors of various actions have been updated to be more clearly laid out. 


Version 1.3.5
~~~~~~~~~~~~~

* New Feature: You can now build headless Linux builds with the Build Player action (Requires Unity 4.2 or above).
* New Feature: You can now set up Split Application Binaries for Android builds in the "Set Android Player Settings"
               action (Requires Unity 4.2 or above).
* New Feature: A new action "Toggle Automatic Refresh" which can be used to disable automatic asset refreshing while
               an automation plan is running. This is useful to prevent Unity from reloading assemblies (and therefore
               exiting the current automation plan) when resources are modified by an external program.
* Improvement: uTomate can now warn you, if your selectors for 'Includes' and 'Excludes' don't match anything. You can
               enable this warning in the new uTomate sheet in the Unity preferences dialog.   
* Fix: Fixed an issue that prevented Unity to save modified assets/scenes in Unity 4.6.                           
               
Version 1.3.4
~~~~~~~~~~~~~

* New Feature: You can now run a single action by right-clicking on it. This is useful for one-shot actions where
               you don't want to build a complete automation plan.
* New Feature: It's now possible to change the texture compression for android builds in the "Build Player" action.
* New Feature: Added context variable $unity:selectionAtPlanStart which contains the object that was selected when
               the automation plan was started. You can use this for creating plans which perform specific actions
               on the currently selected object (e.g. creating a backup copy of a selected file, zeroing all coordinates
               of an element in the current scene, etc.)
* Improvement: The base folder of the "For-Each File Entry" can now be changed. The default is still the Assets folder of your project.
* Fix: In some rare cases it was impossible to open the uTomate main window again.
* Fix: The "Unity Editor Executable" property of the "Run uTomate in external project" action is now evaluated during runtime

Version 1.3.3
~~~~~~~~~~~~~
* Note: Starting with the next version of uTomate (1.4.0) we will drop support for Unity versions below 4.2.0. Older 
  versions of uTomate will remain available for existing customers outside of the Unity Asset Store.
* Improvement: The "Build Lightmaps" action is now capable of using the settings from the currently open scene. This way
               you can easily define bake settings per scene without having to create one new "Build Lightmaps" action
               for each scene in case you want to have per-scene settings.
* Fix: Fixed name clash with multi-platform-toolkit asset.
* Fix: Added a workaround about an undocumented Unity API discrepancy on Windows Phone 8 and Metro build targets.



Version 1.3.2
~~~~~~~~~~~~~

* Improvement: It is now possible to export parts of your project settings into a Unity package. 
* Fix: Custom scripts are now properly loaded from script assemblies by the find GameObjects action.

Version 1.3.1
~~~~~~~~~~~~~

* New Feature: New "Touch Files" action which allows to set the modification date of files to the current date.
               This is useful for triggering reimports.
* Improvement: The result file of the Build DLL action does no longer need to end with .dll.
* Improvement: It's now possible to build a DLL without referencing the Unity.dll. This is useful if you want to
               build DLLs for other Unity versions than the one which is currently running.
* Improvement: The scripting API can now implicitely convert a quaternion to a Vector3. This is helpful when 
               assigning the rotation of an object to a Vector3. With this implicit conversion you now just need
               to type "$gameObject.transform.rotation" instead of "$gameObject.transform.rotation.eulerAngles".
* Improvement: The "Editor Properties" and "Project properties" tabs in the main window are now scrollable.              
* Fix: The "Add platform extension" flag of the "Build Player" action now works correctly with Unity 4.1 and 4.3.    
* Fix: The "Build Player" action now correctly handles the fact that Unity 4.1 has a build platform 
       "StandaloneOSXUniversal" but doesn't support builds for this platform. If this platform is chosen 
       the action will silently build a "StandaloneOSXIntel" build.              

Version 1.3.0
~~~~~~~~~~~~~

* New Feature: New action set for scene manipulation - Create Scene, Instanciate Prefab, Find Game Object in Scene, 
  Modify Game Object, etc.
* New Feature: For-Each-File entry can now also select folders.
* New Feature: For-Each and For-Each-File entries now optionally set an index property with the numeric index of the 
  currently iterated item.
* New Feature: new built-in property $utomate:debugMode which allows to run parts of the plan only if debug mode is 
  enabled. 
* New Feature: compatible with Unity 4.3.
* Improvement: Build Asset Bundle action no longer requires a main asset.
* Improvement: Build Asset Bundle action no longer requires to set any asset bundle option.
* Improvement: When selecting an action in the automation plan editor, it will as well be selected in the inspector.
* Improvement: Notes can now be connected to other automation plan entries and are auto-layouted as well.
* Fix: Performance optimizations to ensure smooth operation in very large projects.
* Fix: Backslashes in editor settings are now handled more gracefully.
* Fix: The "Run in Background" value of the player settings is no longer be reset when running an automation plan.

Version 1.2.1
~~~~~~~~~~~~~

* New Feature: Added action for reloading Unity's asset database.
* Improvement: Ensured compatibility with Unity 4.2
* Improvement: uTomate no longer has compile errors if you have a class named "Attribute" in your project.


Version 1.2.0
~~~~~~~~~~~~~

* New Feature: Quickly run an automation plan by pressing Cmd+K (Ctrl+K on Windows).
* New Feature: Quickly edit an automation plan by pressing Cmd+Shift+K (Ctrl+Shift+K on Windows).
* New Feature: Quickly locate an automation plan in the project tree by pressing Cmd+Option+K (Ctrl+Alt+K on Windows).
* New Feature: The list in the uTomate main window can now be operated with the keyboard.
* New Feature: Run an automation plan from the main window by double-clicking it.
* New Feature: Edit, Locate and Run plans from the main window by right-clicking a plan and selecting the respective
               action from the context menu.
* New Feature: A new action for setting asset labels. Labels can be replaced or amended.
* New Feature: A new action for setting scripting compilation define symbols. 
* New Feature: A new action for asserting conditions. Useful to abort an automation run if a file is missing etc.
* New Feature: A new action for opening a folder in Explorer/Finder. This action was kindly contributed by Jean Fabre.
* New Feature: Script Extensions. It's now possible to write extension objects that can be used inside uTomate's scripts.
* New Feature: File Script Extension. A new script extension providing several useful operations on files an paths
               e.g. converting a full path to a project relative path, get the file name of a path or checking if
               a target file is older than a source file.
* New Feature: Context Script Extension. Allows to modify the context from within scripts (e.g. check if a property 
               is set, etc.).
* New Feature: Several new built-in properties ($unity:version, $unity:supportsAndroid, $unity:supportsIos).
* Improvement: Set Property action now has a flag which allows to set the property only if it is not yet set.
* Improvement: TextAreas in inspectors now have a proper height.
* Improvement: Errors in evaluated scripts now produce a much better error message.
* Fix: The string property renderer will no longer throw an exception when rendering an action with a plain string
       property.
 


Version 1.1.0
~~~~~~~~~~~~~

* New Feature: Added actions for modifiying player settings for Windows, Mac, Linux (Unity 4 only), Web Player,
               iOS and Android build targets. 
* New Feature: Added action for waiting a few seconds. Useful when waiting for external processes or for implementing
               retry-loops.
* New Feature: Inspector renderer is now much more extensible. Custom property renderers can be defined for new
               property types, so you can now create your own UTxyz properties in a pluggable way.
* Improvement: uTomate now detects if the project is recompiled while it is running and locks the reloading of
               assemblies until the current automation plan has finished. This prevents the plan execution from
               being aborted unexpectedly.
* Improvement: You can now run automation plans from their inspector panel.
* Improvement: Inspector now gives better feedback when a required property is not entered.
* Improvement: Inspector now highlights probable configuration errors in Run external program action.
* Improvement: Run external program action now allows to specify a working directory.
* Improvement: uTomate's main window now tries to dock next to the inspector.
* Improvement: Sub-Plans are now marked with a special icon in the automation plan editor.
* Fix: Automatic file extension is no longer offered by the "Build Player" action for the iOS build target 
       as Unity is actually not building an IPA file when building a player for iOS. The option was therefore removed
       to avoid confusion.
* Fix: Warning messages will now display correctly on properties having a folder select option.
* Fix: Delete file action will no longer throw an exception if the file to delete has already been deleted.
* Fix: GUID of automation plans is now stored in a field named diffrently from "guid" to prevent interference 
  with Unity's external VCS feature. This change will unfortunately wipe all the statistics recorded for the build
  plans as these are tied to the serialized GUID. If you are still getting GUID error messages after upgrading to
  1.1.0 please check our FAQ: http://docs.ancientlightstudios.com/display/UT/Frequently+Asked+Questions
* Fix: Automation plan statistics are no longer cleared when you switch to a different project.
* Fix: Run external program action now no longer throws an exception when running it outside of debug mode.
* Fix: Plans running other plans recursively can now be properly cancelled.


Version 1.0.8
~~~~~~~~~~~~~

* Improvement: It is now possible to move the Chili4U and uTomate folders into a subfolder without breaking the editor.
* Fix: When switching to iOS or Android build targets, there are no more compiler errors.


Version 1.0.6
~~~~~~~~~~~~~

* Full Source Code is included now
* Added option to run a plan to the plan's context menu.
* Actions that access the internet now display a warning when being used while having the build target set to "Web Player".
* Fix: "Build unity package" action now properly ensures that parent paths to the unity package are created.


Version 1.0.5
~~~~~~~~~~~~~

* Initial public version.
